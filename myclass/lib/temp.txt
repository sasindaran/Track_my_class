AttendanceTrackerPage





// import 'package:flutter/material.dart';
// import 'package:shared_preferences/shared_preferences.dart';
// import 'dart:convert';
// import 'qr_scanner_page.dart';
// import 'attendance_list_page.dart';
//
// class AttendanceTrackerPage extends StatefulWidget {
//   const AttendanceTrackerPage({Key? key}) : super(key: key);
//
//   @override
//   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
// }
//
// class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
//   List<ClassInfo> classes = [];
//   late String selectedClassName;
//
//   // Define a key for storing class data in SharedPreferences
//   static const String classDataKey = 'classData';
//
//   // Load class data from SharedPreferences when the widget is initialized
//   @override
//   void initState() {
//     super.initState();
//     _loadClassData();
//   }
//
//   // Save class data to SharedPreferences whenever it changes
//   void _saveClassData() async {
//     final prefs = await SharedPreferences.getInstance();
//     final classData = classes.map((classInfo) {
//       return {
//         'className': classInfo.className,
//         'scannedData': classInfo.scannedData,
//       };
//     }).toList();
//     await prefs.setStringList(
//         classDataKey, classData.map((data) => jsonEncode(data)).toList());
//   }
//
//   // Load class data from SharedPreferences
//   void _loadClassData() async {
//     final prefs = await SharedPreferences.getInstance();
//     final classData = prefs.getStringList(classDataKey);
//     if (classData != null) {
//       setState(() {
//         classes = classData.map((data) {
//           final decodedData = jsonDecode(data);
//           return ClassInfo(
//             decodedData['className'],
//             decodedData['scannedData'] ?? '',
//           );
//         }).toList();
//       });
//     }
//   }
//
//   void _showAddClassDialog(BuildContext context) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return AddClassForm(
//           onSubmit: (className) {
//             setState(() {
//               classes.add(ClassInfo(className, ''));
//               _saveClassData();
//             });
//           },
//         );
//       },
//     );
//   }
//
//   void _deleteClass(int index) {
//     setState(() {
//       classes.removeAt(index);
//       _saveClassData();
//     });
//   }
//
//   void _openQRScanner(BuildContext context, int index) async {
//     final scannedData = await Navigator.push(
//       context,
//       MaterialPageRoute(
//         builder: (context) =>
//             QRScannerPage(className: classes[index].className),
//       ),
//     );
//
//     if (scannedData != null) {
//       _updateScannedData(index, scannedData);
//     }
//   }
//
//   void _updateScannedData(int index, String scannedData) {
//     setState(() {
//       classes[index].scannedData = scannedData;
//       _saveClassData();
//     });
//   }
//
//   void _showDatePickerDialog(BuildContext context) async {
//     final DateTime? pickedDate = await showDatePicker(
//       context: context,
//       initialDate: DateTime.now(),
//       firstDate: DateTime(2020),
//       lastDate: DateTime(2030),
//     );
//
//     if (pickedDate != null) {
//       // Handle the selected date here
//       // Pass the pickedDate to the AttendanceListPage
//       Navigator.push(
//         context,
//         MaterialPageRoute(
//           builder: (context) => AttendanceListPage(
//             selectedDate: pickedDate,
//             className: selectedClassName,
//           ),
//         ),
//       );
//     }
//   }
//
//   void _showViewAttendancePage(BuildContext context, String className) {
//     // Redirect to the AttendanceListPage with the selected class name
//     Navigator.push(
//       context,
//       MaterialPageRoute(
//         builder: (context) => AttendanceListPage(
//           selectedDate: DateTime.now(), // Modify the date as needed
//           className: className,
//         ),
//       ),
//     );
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: Text('Attendance Tracker'),
//         backgroundColor: Color.fromARGB(255, 150, 235, 153),
//       ),
//       body: Column(
//         children: <Widget>[
//           Expanded(
//             child: ListView.builder(
//               itemCount: classes.length,
//               itemBuilder: (context, index) {
//                 return ClassBox(
//                   classInfo: classes[index],
//                   onDelete: () {
//                     _deleteClass(index);
//                   },
//                   onEdit: (newClassName) {
//                     _editClass(index, newClassName);
//                   },
//                   onScanQR: () {
//                     _openQRScanner(context, index);
//                   },
//                   onView: () {
//                     _showViewAttendancePage(context, classes[index].className);
//                   },
//                 );
//               },
//             ),
//           ),
//         ],
//       ),
//       floatingActionButton: FloatingActionButton(
//         onPressed: () {
//           _showAddClassDialog(context);
//         },
//         tooltip: 'Add',
//         child: Icon(
//           Icons.add,
//           color: Color.fromARGB(255, 150, 235, 153),
//         ),
//         backgroundColor: Colors.white,
//       ),
//       floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
//       bottomNavigationBar: BottomAppBar(
//         child: Row(
//           mainAxisAlignment: MainAxisAlignment.center,
//           children: <Widget>[
//             ElevatedButton(
//               onPressed: () {
//                 _showDatePickerDialog(context);
//               },
//               child: Text('View'),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
//
//   void _editClass(int index, String className) {
//     setState(() {
//       classes[index].className = className;
//       _saveClassData();
//     });
//   }
// }
//
// class ClassInfo {
//   String className;
//   String scannedData;
//
//   ClassInfo(this.className, this.scannedData);
// }
//
// class ClassBox extends StatelessWidget {
//   final ClassInfo classInfo;
//   final VoidCallback onDelete;
//   final Function(String) onEdit;
//   final VoidCallback onScanQR;
//   final VoidCallback onView; // Added callback for "View" action
//
//   ClassBox({
//     required this.classInfo,
//     required this.onDelete,
//     required this.onEdit,
//     required this.onScanQR,
//     required this.onView,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Container(
//       padding: EdgeInsets.all(16),
//       margin: EdgeInsets.all(16),
//       decoration: BoxDecoration(
//         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
//         borderRadius: BorderRadius.circular(8),
//       ),
//       child: Column(
//         children: [
//           Row(
//             mainAxisAlignment: MainAxisAlignment.spaceBetween,
//             children: [
//               Text(
//                 'Class Name: ${classInfo.className}',
//                 style: TextStyle(fontWeight: FontWeight.bold),
//               ),
//               PopupMenuButton<String>(
//                 onSelected: (value) {
//                   if (value == 'edit') {
//                     _showEditClassDialog(context);
//                   } else if (value == 'view') {
//                     onView(); // Call the "View" callback
//                   } else if (value == 'export') {
//                     // Implement the export action
//                   } else if (value == 'delete') {
//                     onDelete();
//                   } else if (value == 'scanQR') {
//                     onScanQR();
//                   }
//                 },
//                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
//                   const PopupMenuItem<String>(
//                     value: 'edit',
//                     child: Text('Edit'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'view',
//                     child: Text('View'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'export',
//                     child: Text('Export'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'delete',
//                     child: Text('Delete'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'scanQR',
//                     child: Text('Scan QR Code'),
//                   ),
//                 ],
//               ),
//             ],
//           ),
//           Text(
//             'Scanned Data: ${classInfo.scannedData}',
//             style: TextStyle(fontWeight: FontWeight.bold),
//           ),
//         ],
//       ),
//     );
//   }
//
//   void _showEditClassDialog(BuildContext context) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return EditClassDialog(
//           initialClassName: classInfo.className,
//           onSubmit: (newClassName) {
//             onEdit(newClassName);
//             Navigator.of(context).pop();
//           },
//         );
//       },
//     );
//   }
// }
//
// class EditClassDialog extends StatefulWidget {
//   final String initialClassName;
//   final Function(String) onSubmit;
//
//   EditClassDialog({
//     required this.initialClassName,
//     required this.onSubmit,
//   });
//
//   @override
//   _EditClassDialogState createState() => _EditClassDialogState();
// }
//
// class _EditClassDialogState extends State<EditClassDialog> {
//   TextEditingController classNameController = TextEditingController();
//
//   @override
//   void initState() {
//     super.initState();
//     classNameController.text = widget.initialClassName;
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return AlertDialog(
//       title: Text('Edit Class'),
//       content: Column(
//         mainAxisSize: MainAxisSize.min,
//         children: <Widget>[
//           TextField(
//             controller: classNameController,
//             decoration: InputDecoration(labelText: 'Class Name'),
//           ),
//         ],
//       ),
//       actions: <Widget>[
//         TextButton(
//           onPressed: () {
//             Navigator.of(context).pop();
//           },
//           child: Text('Cancel'),
//         ),
//         TextButton(
//           onPressed: () {
//             final className = classNameController.text;
//             widget.onSubmit(className);
//             Navigator.of(context).pop();
//           },
//           child: Text('Submit'),
//         ),
//       ],
//     );
//   }
// }
//
// class AddClassForm extends StatefulWidget {
//   final Function(String) onSubmit;
//
//   AddClassForm({required this.onSubmit});
//
//   @override
//   _AddClassFormState createState() => _AddClassFormState();
// }
//
// class _AddClassFormState extends State<AddClassForm> {
//   TextEditingController classNameController = TextEditingController();
//
//   @override
//   Widget build(BuildContext context) {
//     return AlertDialog(
//       title: Text('Add Class'),
//       content: Column(
//         mainAxisSize: MainAxisSize.min,
//         children: <Widget>[
//           TextField(
//             controller: classNameController,
//             decoration: InputDecoration(labelText: 'Class Name'),
//           ),
//         ],
//       ),
//       actions: <Widget>[
//         TextButton(
//           onPressed: () {
//             Navigator.of(context).pop();
//           },
//           child: Text('Cancel'),
//         ),
//         TextButton(
//           onPressed: () {
//             final className = classNameController.text;
//             widget.onSubmit(className);
//             Navigator.of(context).pop();
//           },
//           child: Text('Submit'),
//         ),
//       ],
//     );
//   }
// }
//
// // import 'package:flutter/material.dart';
// // import 'package:shared_preferences/shared_preferences.dart';
// // import 'dart:convert';
// // import 'qr_scanner_page.dart';
// // import 'attendance_list_page.dart';
// //
// // class AttendanceTrackerPage extends StatefulWidget {
// //   const AttendanceTrackerPage({Key? key}) : super(key: key);
// //
// //   @override
// //   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
// // }
// //
// // class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
// //   List<ClassInfo> classes = [];
// //   late String selectedClassName;
// //
// //   // Define a key for storing class data in SharedPreferences
// //   static const String classDataKey = 'classData';
// //
// //   // Load class data from SharedPreferences when the widget is initialized
// //   @override
// //   void initState() {
// //     super.initState();
// //     _loadClassData();
// //   }
// //
// //   // Save class data to SharedPreferences whenever it changes
// //   void _saveClassData() async {
// //     final prefs = await SharedPreferences.getInstance();
// //     final classData = classes.map((classInfo) {
// //       return {
// //         'className': classInfo.className,
// //         'scannedData': classInfo.scannedData,
// //       };
// //     }).toList();
// //     await prefs.setStringList(
// //         classDataKey, classData.map((data) => jsonEncode(data)).toList());
// //   }
// //
// //   // Load class data from SharedPreferences and set the selected class name
// //   void _loadClassData() async {
// //     final prefs = await SharedPreferences.getInstance();
// //     final classData = prefs.getStringList(classDataKey);
// //     if (classData != null) {
// //       setState(() {
// //         classes = classData.map((data) {
// //           final decodedData = jsonDecode(data);
// //           return ClassInfo(
// //             decodedData['className'],
// //             decodedData['scannedData'] ?? '',
// //           );
// //         }).toList();
// //
// //         // Populate the dropdown with class names
// //         // Make sure to select the first item by default if available
// //         if (classes.isNotEmpty) {
// //           selectedClassName = classes[0].className;
// //         }
// //       });
// //     }
// //   }
// //
// //   void _showAddClassDialog(BuildContext context) {
// //     showDialog(
// //       context: context,
// //       builder: (BuildContext context) {
// //         return AddClassForm(
// //           onSubmit: (className) {
// //             setState(() {
// //               classes.add(ClassInfo(className, ''));
// //               _saveClassData();
// //             });
// //           },
// //         );
// //       },
// //     );
// //   }
// //
// //   void _deleteClass(int index) {
// //     setState(() {
// //       classes.removeAt(index);
// //       _saveClassData();
// //     });
// //   }
// //
// //   void _openQRScanner(BuildContext context, int index) async {
// //     final scannedData = await Navigator.push(
// //       context,
// //       MaterialPageRoute(
// //         builder: (context) =>
// //             QRScannerPage(className: classes[index].className),
// //       ),
// //     );
// //
// //     if (scannedData != null) {
// //       _updateScannedData(index, scannedData);
// //     }
// //   }
// //
// //   void _updateScannedData(int index, String scannedData) {
// //     setState(() {
// //       classes[index].scannedData = scannedData;
// //       _saveClassData();
// //     });
// //   }
// //
// //   void _showDatePickerDialog(BuildContext context) async {
// //     final DateTime? pickedDate = await showDatePicker(
// //       context: context,
// //       initialDate: DateTime.now(),
// //       firstDate: DateTime(2020),
// //       lastDate: DateTime(2030),
// //     );
// //
// //     if (pickedDate != null) {
// //       // Handle the selected date here
// //       // Set the selected class name
// //       setState(() {
// //         selectedClassName = classes.isNotEmpty ? classes[0].className : '';
// //       });
// //
// //       // Pass the pickedDate and selectedClassName to the AttendanceListPage
// //       Navigator.push(
// //         context,
// //         MaterialPageRoute(
// //           builder: (context) => AttendanceListPage(
// //             selectedDate: pickedDate,
// //             className: selectedClassName,
// //           ),
// //         ),
// //       );
// //     }
// //   }
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       appBar: AppBar(
// //         title: Text('Attendance Tracker'),
// //         backgroundColor: Color.fromARGB(255, 150, 235, 153),
// //       ),
// //       body: Column(
// //         children: <Widget>[
// //           Expanded(
// //             child: ListView.builder(
// //               itemCount: classes.length,
// //               itemBuilder: (context, index) {
// //                 return ClassBox(
// //                   classInfo: classes[index],
// //                   onDelete: () {
// //                     _deleteClass(index);
// //                   },
// //                   onEdit: (newClassName) {
// //                     _editClass(index, newClassName);
// //                   },
// //                   onScanQR: () {
// //                     _openQRScanner(context, index);
// //                   },
// //                 );
// //               },
// //             ),
// //           ),
// //         ],
// //       ),
// //       floatingActionButton: FloatingActionButton(
// //         onPressed: () {
// //           _showAddClassDialog(context);
// //         },
// //         tooltip: 'Add',
// //         child: Icon(
// //           Icons.add,
// //           color: Color.fromARGB(255, 150, 235, 153),
// //         ),
// //         backgroundColor: Colors.white,
// //       ),
// //       floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
// //       bottomNavigationBar: BottomAppBar(
// //         child: Row(
// //           mainAxisAlignment: MainAxisAlignment.center,
// //           children: <Widget>[
// //             ElevatedButton(
// //               onPressed: () {
// //                 _showDatePickerDialog(context);
// //               },
// //               child: Text('View'),
// //             ),
// //           ],
// //         ),
// //       ),
// //     );
// //   }
// //
// //   void _editClass(int index, String className) {
// //     setState(() {
// //       classes[index].className = className;
// //       _saveClassData();
// //     });
// //   }
// // }
// //
// // class ClassInfo {
// //   String className;
// //   String scannedData;
// //
// //   ClassInfo(this.className, this.scannedData);
// // }
// //
// // class ClassBox extends StatelessWidget {
// //   final ClassInfo classInfo;
// //   final VoidCallback onDelete;
// //   final Function(String) onEdit;
// //   final VoidCallback onScanQR;
// //
// //   ClassBox({
// //     required this.classInfo,
// //     required this.onDelete,
// //     required this.onEdit,
// //     required this.onScanQR,
// //   });
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return Container(
// //       padding: EdgeInsets.all(16),
// //       margin: EdgeInsets.all(16),
// //       decoration: BoxDecoration(
// //         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
// //         borderRadius: BorderRadius.circular(8),
// //       ),
// //       child: Column(
// //         children: [
// //           Row(
// //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
// //             children: [
// //               Text(
// //                 'Class Name: ${classInfo.className}',
// //                 style: TextStyle(fontWeight: FontWeight.bold),
// //               ),
// //               PopupMenuButton<String>(
// //                 onSelected: (value) {
// //                   if (value == 'edit') {
// //                     _showEditClassDialog(context);
// //                   } else if (value == 'view') {
// //                     // Implement the view action
// //                   } else if (value == 'export') {
// //                     // Implement the export action
// //                   } else if (value == 'delete') {
// //                     onDelete();
// //                   } else if (value == 'scanQR') {
// //                     onScanQR();
// //                   }
// //                 },
// //                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
// //                   const PopupMenuItem<String>(
// //                     value: 'edit',
// //                     child: Text('Edit'),
// //                   ),
// //                   const PopupMenuItem<String>(
// //                     value: 'view',
// //                     child: Text('View'),
// //                   ),
// //                   const PopupMenuItem<String>(
// //                     value: 'export',
// //                     child: Text('Export'),
// //                   ),
// //                   const PopupMenuItem<String>(
// //                     value: 'delete',
// //                     child: Text('Delete'),
// //                   ),
// //                   const PopupMenuItem<String>(
// //                     value: 'scanQR',
// //                     child: Text('Scan QR Code'),
// //                   ),
// //                 ],
// //               ),
// //             ],
// //           ),
// //           Text(
// //             'Scanned Data: ${classInfo.scannedData}',
// //             style: TextStyle(fontWeight: FontWeight.bold),
// //           ),
// //         ],
// //       ),
// //     );
// //   }
// //
// //   void _showEditClassDialog(BuildContext context) {
// //     showDialog(
// //       context: context,
// //       builder: (BuildContext context) {
// //         return EditClassDialog(
// //           initialClassName: classInfo.className,
// //           onSubmit: (newClassName) {
// //             onEdit(newClassName);
// //             Navigator.of(context).pop();
// //           },
// //         );
// //       },
// //     );
// //   }
// // }
// //
// // class EditClassDialog extends StatefulWidget {
// //   final String initialClassName;
// //   final Function(String) onSubmit;
// //
// //   EditClassDialog({
// //     required this.initialClassName,
// //     required this.onSubmit,
// //   });
// //
// //   @override
// //   _EditClassDialogState createState() => _EditClassDialogState();
// // }
// //
// // class _EditClassDialogState extends State<EditClassDialog> {
// //   TextEditingController classNameController = TextEditingController();
// //
// //   @override
// //   void initState() {
// //     super.initState();
// //     classNameController.text = widget.initialClassName;
// //   }
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return AlertDialog(
// //       title: Text('Edit Class'),
// //       content: Column(
// //         mainAxisSize: MainAxisSize.min,
// //         children: <Widget>[
// //           TextField(
// //             controller: classNameController,
// //             decoration: InputDecoration(labelText: 'Class Name'),
// //           ),
// //         ],
// //       ),
// //       actions: <Widget>[
// //         TextButton(
// //           onPressed: () {
// //             Navigator.of(context).pop();
// //           },
// //           child: Text('Cancel'),
// //         ),
// //         TextButton(
// //           onPressed: () {
// //             final className = classNameController.text;
// //             widget.onSubmit(className);
// //             Navigator.of(context).pop();
// //           },
// //           child: Text('Submit'),
// //         ),
// //       ],
// //     );
// //   }
// // }
// //
// // class AddClassForm extends StatefulWidget {
// //   final Function(String) onSubmit;
// //
// //   AddClassForm({required this.onSubmit});
// //
// //   @override
// //   _AddClassFormState createState() => _AddClassFormState();
// // }
// //
// // class _AddClassFormState extends State<AddClassForm> {
// //   TextEditingController classNameController = TextEditingController();
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return AlertDialog(
// //       title: Text('Add Class'),
// //       content: Column(
// //         mainAxisSize: MainAxisSize.min,
// //         children: <Widget>[
// //           TextField(
// //             controller: classNameController,
// //             decoration: InputDecoration(labelText: 'Class Name'),
// //           ),
// //         ],
// //       ),
// //       actions: <Widget>[
// //         TextButton(
// //           onPressed: () {
// //             Navigator.of(context).pop();
// //           },
// //           child: Text('Cancel'),
// //         ),
// //         TextButton(
// //           onPressed: () {
// //             final className = classNameController.text;
// //             widget.onSubmit(className);
// //             Navigator.of(context).pop();
// //           },
// //           child: Text('Submit'),
// //         ),
// //       ],
// //     );
// //   }
// // }
// //
// // // import 'package:flutter/material.dart';
// // // import 'package:shared_preferences/shared_preferences.dart';
// // // import 'dart:convert';
// // // import 'qr_scanner_page.dart';
// // // import 'attendance_list_page.dart';
// // //
// // // class AttendanceTrackerPage extends StatefulWidget {
// // //   const AttendanceTrackerPage({Key? key}) : super(key: key);
// // //
// // //   @override
// // //   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
// // // }
// // //
// // // class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
// // //   List<ClassInfo> classes = [];
// // //   late String selectedClassName;
// // //
// // //   // Define a key for storing class data in SharedPreferences
// // //   static const String classDataKey = 'classData';
// // //
// // //   // Load class data from SharedPreferences when the widget is initialized
// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     _loadClassData();
// // //   }
// // //
// // //   // Save class data to SharedPreferences whenever it changes
// // //   void _saveClassData() async {
// // //     final prefs = await SharedPreferences.getInstance();
// // //     final classData = classes.map((classInfo) {
// // //       return {
// // //         'className': classInfo.className,
// // //         'scannedData': classInfo.scannedData,
// // //       };
// // //     }).toList();
// // //     await prefs.setStringList(
// // //         classDataKey, classData.map((data) => jsonEncode(data)).toList());
// // //   }
// // //
// // //   // Load class data from SharedPreferences
// // //   void _loadClassData() async {
// // //     final prefs = await SharedPreferences.getInstance();
// // //     final classData = prefs.getStringList(classDataKey);
// // //     if (classData != null) {
// // //       setState(() {
// // //         classes = classData.map((data) {
// // //           final decodedData = jsonDecode(data);
// // //           return ClassInfo(
// // //             decodedData['className'],
// // //             decodedData['scannedData'] ?? '',
// // //           );
// // //         }).toList();
// // //       });
// // //     }
// // //   }
// // //
// // //   void _showAddClassDialog(BuildContext context) {
// // //     showDialog(
// // //       context: context,
// // //       builder: (BuildContext context) {
// // //         return AddClassForm(
// // //           onSubmit: (className) {
// // //             setState(() {
// // //               classes.add(ClassInfo(className, ''));
// // //               _saveClassData();
// // //             });
// // //           },
// // //         );
// // //       },
// // //     );
// // //   }
// // //
// // //   void _deleteClass(int index) {
// // //     setState(() {
// // //       classes.removeAt(index);
// // //       _saveClassData();
// // //     });
// // //   }
// // //
// // //   void _openQRScanner(BuildContext context, int index) async {
// // //     final scannedData = await Navigator.push(
// // //       context,
// // //       MaterialPageRoute(
// // //         builder: (context) =>
// // //             QRScannerPage(className: classes[index].className),
// // //       ),
// // //     );
// // //
// // //     if (scannedData != null) {
// // //       _updateScannedData(index, scannedData);
// // //     }
// // //   }
// // //
// // //   void _updateScannedData(int index, String scannedData) {
// // //     setState(() {
// // //       classes[index].scannedData = scannedData;
// // //       _saveClassData();
// // //     });
// // //   }
// // //
// // //   void _showDatePickerDialog(BuildContext context) async {
// // //     final DateTime? pickedDate = await showDatePicker(
// // //       context: context,
// // //       initialDate: DateTime.now(),
// // //       firstDate: DateTime(2020),
// // //       lastDate: DateTime(2030),
// // //     );
// // //
// // //     if (pickedDate != null) {
// // //       // Handle the selected date here
// // //       // Pass the pickedDate to the AttendanceListPage
// // //       Navigator.push(
// // //         context,
// // //         MaterialPageRoute(
// // //           builder: (context) => AttendanceListPage(
// // //             selectedDate: pickedDate,
// // //             className: selectedClassName,
// // //           ),
// // //         ),
// // //       );
// // //     }
// // //   }
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Scaffold(
// // //       appBar: AppBar(
// // //         title: Text('Attendance Tracker'),
// // //         backgroundColor: Color.fromARGB(255, 150, 235, 153),
// // //       ),
// // //       body: Column(
// // //         children: <Widget>[
// // //           Expanded(
// // //             child: ListView.builder(
// // //               itemCount: classes.length,
// // //               itemBuilder: (context, index) {
// // //                 return ClassBox(
// // //                   classInfo: classes[index],
// // //                   onDelete: () {
// // //                     _deleteClass(index);
// // //                   },
// // //                   onEdit: (newClassName) {
// // //                     _editClass(index, newClassName);
// // //                   },
// // //                   onScanQR: () {
// // //                     _openQRScanner(context, index);
// // //                   },
// // //                 );
// // //               },
// // //             ),
// // //           ),
// // //         ],
// // //       ),
// // //       floatingActionButton: FloatingActionButton(
// // //         onPressed: () {
// // //           _showAddClassDialog(context);
// // //         },
// // //         tooltip: 'Add',
// // //         child: Icon(
// // //           Icons.add,
// // //           color: Color.fromARGB(255, 150, 235, 153),
// // //         ),
// // //         backgroundColor: Colors.white,
// // //       ),
// // //       floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
// // //       bottomNavigationBar: BottomAppBar(
// // //         child: Row(
// // //           mainAxisAlignment: MainAxisAlignment.center,
// // //           children: <Widget>[
// // //             ElevatedButton(
// // //               onPressed: () {
// // //                 _showDatePickerDialog(context);
// // //               },
// // //               child: Text('View'),
// // //             ),
// // //           ],
// // //         ),
// // //       ),
// // //     );
// // //   }
// // //
// // //   void _editClass(int index, String className) {
// // //     setState(() {
// // //       classes[index].className = className;
// // //       _saveClassData();
// // //     });
// // //   }
// // // }
// // //
// // // class ClassInfo {
// // //   String className;
// // //   String scannedData;
// // //
// // //   ClassInfo(this.className, this.scannedData);
// // // }
// // //
// // // class ClassBox extends StatelessWidget {
// // //   final ClassInfo classInfo;
// // //   final VoidCallback onDelete;
// // //   final Function(String) onEdit;
// // //   final VoidCallback onScanQR;
// // //
// // //   ClassBox({
// // //     required this.classInfo,
// // //     required this.onDelete,
// // //     required this.onEdit,
// // //     required this.onScanQR,
// // //   });
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Container(
// // //       padding: EdgeInsets.all(16),
// // //       margin: EdgeInsets.all(16),
// // //       decoration: BoxDecoration(
// // //         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
// // //         borderRadius: BorderRadius.circular(8),
// // //       ),
// // //       child: Column(
// // //         children: [
// // //           Row(
// // //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
// // //             children: [
// // //               Text(
// // //                 'Class Name: ${classInfo.className}',
// // //                 style: TextStyle(fontWeight: FontWeight.bold),
// // //               ),
// // //               PopupMenuButton<String>(
// // //                 onSelected: (value) {
// // //                   if (value == 'edit') {
// // //                     _showEditClassDialog(context);
// // //                   } else if (value == 'view') {
// // //                     // Implement the view action
// // //                   } else if (value == 'export') {
// // //                     // Implement the export action
// // //                   } else if (value == 'delete') {
// // //                     onDelete();
// // //                   } else if (value == 'scanQR') {
// // //                     onScanQR();
// // //                   }
// // //                 },
// // //                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
// // //                   const PopupMenuItem<String>(
// // //                     value: 'edit',
// // //                     child: Text('Edit'),
// // //                   ),
// // //                   const PopupMenuItem<String>(
// // //                     value: 'view',
// // //                     child: Text('View'),
// // //                   ),
// // //                   const PopupMenuItem<String>(
// // //                     value: 'export',
// // //                     child: Text('Export'),
// // //                   ),
// // //                   const PopupMenuItem<String>(
// // //                     value: 'delete',
// // //                     child: Text('Delete'),
// // //                   ),
// // //                   const PopupMenuItem<String>(
// // //                     value: 'scanQR',
// // //                     child: Text('Scan QR Code'),
// // //                   ),
// // //                 ],
// // //               ),
// // //             ],
// // //           ),
// // //           Text(
// // //             'Scanned Data: ${classInfo.scannedData}',
// // //             style: TextStyle(fontWeight: FontWeight.bold),
// // //           ),
// // //         ],
// // //       ),
// // //     );
// // //   }
// // //
// // //   void _showEditClassDialog(BuildContext context) {
// // //     showDialog(
// // //       context: context,
// // //       builder: (BuildContext context) {
// // //         return EditClassDialog(
// // //           initialClassName: classInfo.className,
// // //           onSubmit: (newClassName) {
// // //             onEdit(newClassName);
// // //             Navigator.of(context).pop();
// // //           },
// // //         );
// // //       },
// // //     );
// // //   }
// // // }
// // //
// // // class EditClassDialog extends StatefulWidget {
// // //   final String initialClassName;
// // //   final Function(String) onSubmit;
// // //
// // //   EditClassDialog({
// // //     required this.initialClassName,
// // //     required this.onSubmit,
// // //   });
// // //
// // //   @override
// // //   _EditClassDialogState createState() => _EditClassDialogState();
// // // }
// // //
// // // class _EditClassDialogState extends State<EditClassDialog> {
// // //   TextEditingController classNameController = TextEditingController();
// // //
// // //   @override
// // //   void initState() {
// // //     super.initState();
// // //     classNameController.text = widget.initialClassName;
// // //   }
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return AlertDialog(
// // //       title: Text('Edit Class'),
// // //       content: Column(
// // //         mainAxisSize: MainAxisSize.min,
// // //         children: <Widget>[
// // //           TextField(
// // //             controller: classNameController,
// // //             decoration: InputDecoration(labelText: 'Class Name'),
// // //           ),
// // //         ],
// // //       ),
// // //       actions: <Widget>[
// // //         TextButton(
// // //           onPressed: () {
// // //             Navigator.of(context).pop();
// // //           },
// // //           child: Text('Cancel'),
// // //         ),
// // //         TextButton(
// // //           onPressed: () {
// // //             final className = classNameController.text;
// // //             widget.onSubmit(className);
// // //             Navigator.of(context).pop();
// // //           },
// // //           child: Text('Submit'),
// // //         ),
// // //       ],
// // //     );
// // //   }
// // // }
// // //
// // // class AddClassForm extends StatefulWidget {
// // //   final Function(String) onSubmit;
// // //
// // //   AddClassForm({required this.onSubmit});
// // //
// // //   @override
// // //   _AddClassFormState createState() => _AddClassFormState();
// // // }
// // //
// // // class _AddClassFormState extends State<AddClassForm> {
// // //   TextEditingController classNameController = TextEditingController();
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return AlertDialog(
// // //       title: Text('Add Class'),
// // //       content: Column(
// // //         mainAxisSize: MainAxisSize.min,
// // //         children: <Widget>[
// // //           TextField(
// // //             controller: classNameController,
// // //             decoration: InputDecoration(labelText: 'Class Name'),
// // //           ),
// // //         ],
// // //       ),
// // //       actions: <Widget>[
// // //         TextButton(
// // //           onPressed: () {
// // //             Navigator.of(context).pop();
// // //           },
// // //           child: Text('Cancel'),
// // //         ),
// // //         TextButton(
// // //           onPressed: () {
// // //             final className = classNameController.text;
// // //             widget.onSubmit(className);
// // //             Navigator.of(context).pop();
// // //           },
// // //           child: Text('Submit'),
// // //         ),
// // //       ],
// // //     );
// // //   }
// // // }
// // //
// // // // import 'package:flutter/material.dart';
// // // // import 'package:shared_preferences/shared_preferences.dart';
// // // // import 'dart:convert';
// // // // import 'qr_scanner_page.dart'; // Import the QRScannerPage file
// // // //
// // // // class AttendanceTrackerPage extends StatefulWidget {
// // // //   const AttendanceTrackerPage({super.key});
// // // //
// // // //   @override
// // // //   // ignore: library_private_types_in_public_api
// // // //   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
// // // // }
// // // //
// // // // class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
// // // //   List<ClassInfo> classes = [];
// // // //
// // // //   // Define a key for storing class data in SharedPreferences
// // // //   static const String classDataKey = 'classData';
// // // //
// // // //   // Load class data from SharedPreferences when the widget is initialized
// // // //   @override
// // // //   void initState() {
// // // //     super.initState();
// // // //     _loadClassData();
// // // //   }
// // // //
// // // //   // Save class data to SharedPreferences whenever it changes
// // // //   void _saveClassData() async {
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     final classData = classes.map((classInfo) {
// // // //       return {
// // // //         'className': classInfo.className,
// // // //         'scannedData': classInfo.scannedData,
// // // //       };
// // // //     }).toList();
// // // //     await prefs.setStringList(
// // // //         classDataKey, classData.map((data) => jsonEncode(data)).toList());
// // // //   }
// // // //
// // // //   // Load class data from SharedPreferences
// // // //   void _loadClassData() async {
// // // //     final prefs = await SharedPreferences.getInstance();
// // // //     final classData = prefs.getStringList(classDataKey);
// // // //     if (classData != null) {
// // // //       setState(() {
// // // //         classes = classData.map((data) {
// // // //           final decodedData = jsonDecode(data);
// // // //           return ClassInfo(
// // // //             decodedData['className'],
// // // //             decodedData['scannedData'] ?? '',
// // // //           );
// // // //         }).toList();
// // // //       });
// // // //     }
// // // //   }
// // // //
// // // //   void _showAddClassDialog(BuildContext context) {
// // // //     showDialog(
// // // //       context: context,
// // // //       builder: (BuildContext context) {
// // // //         return AddClassForm(
// // // //           onSubmit: (className) {
// // // //             setState(() {
// // // //               classes.add(ClassInfo(className, ''));
// // // //               _saveClassData();
// // // //             });
// // // //           },
// // // //         );
// // // //       },
// // // //     );
// // // //   }
// // // //
// // // //   void _deleteClass(int index) {
// // // //     setState(() {
// // // //       classes.removeAt(index);
// // // //       _saveClassData();
// // // //     });
// // // //   }
// // // //
// // // //   // Function to open QR scanner and update scanned data
// // // //   void _openQRScanner(BuildContext context, int index) async {
// // // //     final scannedData = await Navigator.push(
// // // //       context,
// // // //       MaterialPageRoute(
// // // //         builder: (context) => QRScannerPage(
// // // //             className: classes[index].className), // Pass the className
// // // //       ),
// // // //     );
// // // //
// // // //     if (scannedData != null) {
// // // //       _updateScannedData(index, scannedData);
// // // //     }
// // // //   }
// // // //
// // // //   // void _openQRScanner(BuildContext context, int index) async {
// // // //   //   final scannedData = await Navigator.push(
// // // //   //     context,
// // // //   //     MaterialPageRoute(builder: (context) => QRScannerPage()),
// // // //   //   );
// // // //   //
// // // //   //   if (scannedData != null) {
// // // //   //     _updateScannedData(index, scannedData);
// // // //   //   }
// // // //   // }
// // // //
// // // //   // Update scanned data for a class
// // // //   void _updateScannedData(int index, String scannedData) {
// // // //     setState(() {
// // // //       classes[index].scannedData = scannedData;
// // // //       _saveClassData();
// // // //     });
// // // //   }
// // // //
// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return Scaffold(
// // // //       appBar: AppBar(
// // // //         title: Text('Attendance Tracker'),
// // // //         backgroundColor: Color.fromARGB(255, 150, 235, 153),
// // // //       ),
// // // //       body: Column(
// // // //         children: <Widget>[
// // // //           Expanded(
// // // //             child: ListView.builder(
// // // //               itemCount: classes.length,
// // // //               itemBuilder: (context, index) {
// // // //                 return ClassBox(
// // // //                   classInfo: classes[index],
// // // //                   onDelete: () {
// // // //                     _deleteClass(index);
// // // //                   },
// // // //                   onEdit: (newClassName) {
// // // //                     _editClass(index, newClassName);
// // // //                   },
// // // //                   onScanQR: () {
// // // //                     _openQRScanner(context, index);
// // // //                   },
// // // //                 );
// // // //               },
// // // //             ),
// // // //           ),
// // // //         ],
// // // //       ),
// // // //       floatingActionButton: FloatingActionButton(
// // // //         onPressed: () {
// // // //           _showAddClassDialog(context);
// // // //         },
// // // //         tooltip: 'Add',
// // // //         child: Icon(
// // // //           Icons.add,
// // // //           color: Color.fromARGB(255, 150, 235, 153),
// // // //         ),
// // // //         backgroundColor: Colors.white,
// // // //       ),
// // // //     );
// // // //   }
// // // //
// // // //   // Create a method to handle the edit action
// // // //   void _editClass(int index, String className) {
// // // //     setState(() {
// // // //       classes[index].className = className;
// // // //       _saveClassData();
// // // //     });
// // // //   }
// // // // }
// // // //
// // // // class ClassInfo {
// // // //   String className;
// // // //   String scannedData;
// // // //
// // // //   ClassInfo(this.className, this.scannedData);
// // // // }
// // // //
// // // // class ClassBox extends StatelessWidget {
// // // //   final ClassInfo classInfo;
// // // //   final VoidCallback onDelete;
// // // //   final Function(String) onEdit;
// // // //   final VoidCallback onScanQR;
// // // //
// // // //   ClassBox({
// // // //     required this.classInfo,
// // // //     required this.onDelete,
// // // //     required this.onEdit,
// // // //     required this.onScanQR,
// // // //   });
// // // //
// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return Container(
// // // //       padding: EdgeInsets.all(16),
// // // //       margin: EdgeInsets.all(16),
// // // //       decoration: BoxDecoration(
// // // //         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
// // // //         borderRadius: BorderRadius.circular(8),
// // // //       ),
// // // //       child: Column(
// // // //         children: [
// // // //           Row(
// // // //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
// // // //             children: [
// // // //               Text(
// // // //                 'Class Name: ${classInfo.className}',
// // // //                 style: TextStyle(fontWeight: FontWeight.bold),
// // // //               ),
// // // //               PopupMenuButton<String>(
// // // //                 onSelected: (value) {
// // // //                   if (value == 'edit') {
// // // //                     _showEditClassDialog(context);
// // // //                   } else if (value == 'view') {
// // // //                     // Implement the view action
// // // //                   } else if (value == 'export') {
// // // //                     // Implement the export action
// // // //                   } else if (value == 'delete') {
// // // //                     onDelete(); // Call the delete callback
// // // //                   } else if (value == 'scanQR') {
// // // //                     onScanQR(); // Call the scan QR callback
// // // //                   }
// // // //                 },
// // // //                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
// // // //                   const PopupMenuItem<String>(
// // // //                     value: 'edit',
// // // //                     child: Text('Edit'),
// // // //                   ),
// // // //                   const PopupMenuItem<String>(
// // // //                     value: 'view',
// // // //                     child: Text('View'),
// // // //                   ),
// // // //                   const PopupMenuItem<String>(
// // // //                     value: 'export',
// // // //                     child: Text('Export'),
// // // //                   ),
// // // //                   const PopupMenuItem<String>(
// // // //                     value: 'delete',
// // // //                     child: Text('Delete'),
// // // //                   ),
// // // //                   const PopupMenuItem<String>(
// // // //                     value: 'scanQR',
// // // //                     child: Text(
// // // //                         'Scan QR Code'), // Add a custom menu item for QR scanner
// // // //                   ),
// // // //                 ],
// // // //               ),
// // // //             ],
// // // //           ),
// // // //           Text(
// // // //             'Scanned Data: ${classInfo.scannedData}',
// // // //             style: TextStyle(fontWeight: FontWeight.bold),
// // // //           ),
// // // //         ],
// // // //       ),
// // // //     );
// // // //   }
// // // //
// // // //   void _showEditClassDialog(BuildContext context) {
// // // //     showDialog(
// // // //       context: context,
// // // //       builder: (BuildContext context) {
// // // //         return EditClassDialog(
// // // //           initialClassName: classInfo.className,
// // // //           onSubmit: (newClassName) {
// // // //             onEdit(newClassName);
// // // //             Navigator.of(context).pop();
// // // //           },
// // // //         );
// // // //       },
// // // //     );
// // // //   }
// // // // }
// // // //
// // // // class EditClassDialog extends StatefulWidget {
// // // //   final String initialClassName;
// // // //   final Function(String) onSubmit;
// // // //
// // // //   EditClassDialog({
// // // //     required this.initialClassName,
// // // //     required this.onSubmit,
// // // //   });
// // // //
// // // //   @override
// // // //   _EditClassDialogState createState() => _EditClassDialogState();
// // // // }
// // // //
// // // // class _EditClassDialogState extends State<EditClassDialog> {
// // // //   TextEditingController classNameController = TextEditingController();
// // // //
// // // //   @override
// // // //   void initState() {
// // // //     super.initState();
// // // //     classNameController.text = widget.initialClassName;
// // // //   }
// // // //
// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return AlertDialog(
// // // //       title: Text('Edit Class'),
// // // //       content: Column(
// // // //         mainAxisSize: MainAxisSize.min,
// // // //         children: <Widget>[
// // // //           TextField(
// // // //             controller: classNameController,
// // // //             decoration: InputDecoration(labelText: 'Class Name'),
// // // //           ),
// // // //         ],
// // // //       ),
// // // //       actions: <Widget>[
// // // //         TextButton(
// // // //           onPressed: () {
// // // //             Navigator.of(context).pop();
// // // //           },
// // // //           child: Text('Cancel'),
// // // //         ),
// // // //         TextButton(
// // // //           onPressed: () {
// // // //             final className = classNameController.text;
// // // //             widget.onSubmit(className);
// // // //             Navigator.of(context).pop();
// // // //           },
// // // //           child: Text('Submit'),
// // // //         ),
// // // //       ],
// // // //     );
// // // //   }
// // // // }
// // // //
// // // // class AddClassForm extends StatefulWidget {
// // // //   final Function(String) onSubmit;
// // // //
// // // //   AddClassForm({required this.onSubmit});
// // // //
// // // //   @override
// // // //   _AddClassFormState createState() => _AddClassFormState();
// // // // }
// // // //
// // // // class _AddClassFormState extends State<AddClassForm> {
// // // //   TextEditingController classNameController = TextEditingController();
// // // //
// // // //   @override
// // // //   Widget build(BuildContext context) {
// // // //     return AlertDialog(
// // // //       title: Text('Add Class'),
// // // //       content: Column(
// // // //         mainAxisSize: MainAxisSize.min,
// // // //         children: <Widget>[
// // // //           TextField(
// // // //             controller: classNameController,
// // // //             decoration: InputDecoration(labelText: 'Class Name'),
// // // //           ),
// // // //         ],
// // // //       ),
// // // //       actions: <Widget>[
// // // //         TextButton(
// // // //           onPressed: () {
// // // //             Navigator.of(context).pop();
// // // //           },
// // // //           child: Text('Cancel'),
// // // //         ),
// // // //         TextButton(
// // // //           onPressed: () {
// // // //             final className = classNameController.text;
// // // //             widget.onSubmit(className);
// // // //             Navigator.of(context).pop();
// // // //           },
// // // //           child: Text('Submit'),
// // // //         ),
// // // //       ],
// // // //     );
// // // //   }
// // // // }

// import 'package:flutter/material.dart';
// import 'package:myclass/database_helper.dart';
// import 'package:shared_preferences/shared_preferences.dart';
// import 'dart:convert';
// import 'qr_scanner_page.dart';
// import 'attendance_list_page.dart';
//
// class AttendanceTrackerPage extends StatefulWidget {
//   const AttendanceTrackerPage({Key? key}) : super(key: key);
//
//   @override
//   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
// }
//
// class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
//   List<ClassInfo> classes = [];
//   late String selectedClassName;
//
//   // Define a key for storing class data in SharedPreferences
//   static const String classDataKey = 'classData';
//
//   // Load class data from SharedPreferences when the widget is initialized
//   @override
//   void initState() {
//     super.initState();
//     _loadClassData();
//   }
//
//   // Save class data to SharedPreferences whenever it changes
//   void _saveClassData() async {
//     final prefs = await SharedPreferences.getInstance();
//     final classData = classes.map((classInfo) {
//       return {
//         'className': classInfo.className,
//         'scannedData': classInfo.scannedData,
//       };
//     }).toList();
//     await prefs.setStringList(
//         classDataKey, classData.map((data) => jsonEncode(data)).toList());
//   }
//
//   // Load class data from SharedPreferences
//   void _loadClassData() async {
//     final prefs = await SharedPreferences.getInstance();
//     final classData = prefs.getStringList(classDataKey);
//     if (classData != null) {
//       setState(() {
//         classes = classData.map((data) {
//           final decodedData = jsonDecode(data);
//           return ClassInfo(
//             decodedData['className'],
//             decodedData['scannedData'] ?? '',
//           );
//         }).toList();
//       });
//     }
//   }
//
//   void _showAddClassDialog(BuildContext context) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return AddClassForm(
//           onSubmit: (className) {
//             setState(() {
//               classes.add(ClassInfo(className, ''));
//               _saveClassData();
//             });
//           },
//         );
//       },
//     );
//   }
//
//   void _deleteClass(int index) async {
//     final classNameToDelete = classes[index].className;
//
//     // Delete the class from the database
//     final dbHelper = DatabaseHelper();
//     await dbHelper.deleteClass(classNameToDelete);
//
//     setState(() {
//       classes.removeAt(index);
//       _saveClassData();
//     });
//   }
//
//   // void _deleteClass(int index) {
//   //   setState(() {
//   //     classes.removeAt(index);
//   //     _saveClassData();
//   //   });
//   // }
//
//   void _openQRScanner(BuildContext context, int index) async {
//     final scannedData = await Navigator.push(
//       context,
//       MaterialPageRoute(
//         builder: (context) =>
//             QRScannerPage(className: classes[index].className),
//       ),
//     );
//
//     if (scannedData != null) {
//       _updateScannedData(index, scannedData);
//     }
//   }
//
//   void _updateScannedData(int index, String scannedData) {
//     setState(() {
//       classes[index].scannedData = scannedData;
//       _saveClassData();
//     });
//   }
//
//   void _showViewAttendancePage(BuildContext context, String className) async {
//     final DateTime? selectedDate = await showDatePicker(
//       context: context,
//       initialDate: DateTime.now(),
//       firstDate: DateTime(2020),
//       lastDate: DateTime(2030),
//     );
//
//     if (selectedDate != null) {
//       // Redirect to the AttendanceListPage with the selected date and class name
//       Navigator.push(
//         context,
//         MaterialPageRoute(
//           builder: (context) => AttendanceListPage(
//             selectedDate: selectedDate,
//             className: className,
//           ),
//         ),
//       );
//     }
//   }
//
//   // void _showViewAttendancePage(BuildContext context, String className) {
//   //   // Redirect to the AttendanceListPage with the selected class name
//   //   Navigator.push(
//   //     context,
//   //     MaterialPageRoute(
//   //       builder: (context) => AttendanceListPage(
//   //         selectedDate: DateTime.now(), // Modify the date as needed
//   //         className: className,
//   //       ),
//   //     ),
//   //   );
//   // }
//
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: Text('Attendance Tracker'),
//         backgroundColor: Color.fromARGB(255, 150, 235, 153),
//       ),
//       body: Column(
//         children: <Widget>[
//           Expanded(
//             child: ListView.builder(
//               itemCount: classes.length,
//               itemBuilder: (context, index) {
//                 return ClassBox(
//                   classInfo: classes[index],
//                   onDelete: () {
//                     _deleteClass(index);
//                   },
//                   onEdit: (newClassName) {
//                     _editClass(index, newClassName);
//                   },
//                   onScanQR: () {
//                     _openQRScanner(context, index);
//                   },
//                   onView: () {
//                     _showViewAttendancePage(context, classes[index].className);
//                   },
//                 );
//               },
//             ),
//           ),
//         ],
//       ),
//       floatingActionButton: FloatingActionButton(
//         onPressed: () {
//           _showAddClassDialog(context);
//         },
//         tooltip: 'Add',
//         child: Icon(
//           Icons.add,
//           color: Color.fromARGB(255, 150, 235, 153),
//         ),
//         backgroundColor: Colors.white,
//       ),
//       // floatingActionButtonLocation: FloatingActionButtonLocation.centerFloat,
//     );
//   }
//
//   void restartApp(BuildContext context) {
//     runApp(
//       MaterialApp(
//         home: AttendanceTrackerPage(),
//       ),
//     );
//   }
//
//   void _editClass(int index, String className) {
//     print('Editing class: $className');
//
//     setState(() {
//       classes[index].className = className;
//       _saveClassData();
//     });
//     restartApp(context);
//   }
// }
//
// class ClassInfo {
//   String className;
//   String scannedData;
//
//   ClassInfo(this.className, this.scannedData);
// }
//
// class ClassBox extends StatelessWidget {
//   final ClassInfo classInfo;
//   final VoidCallback onDelete;
//   final Function(String) onEdit;
//   final VoidCallback onScanQR;
//   final VoidCallback onView; // Added callback for "View" action
//
//   ClassBox({
//     required this.classInfo,
//     required this.onDelete,
//     required this.onEdit,
//     required this.onScanQR,
//     required this.onView,
//   });
//
//   @override
//   Widget build(BuildContext context) {
//     return Container(
//       padding: EdgeInsets.all(16),
//       margin: EdgeInsets.all(16),
//       decoration: BoxDecoration(
//         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
//         borderRadius: BorderRadius.circular(8),
//       ),
//       child: Column(
//         children: [
//           Row(
//             mainAxisAlignment: MainAxisAlignment.spaceBetween,
//             children: [
//               Text(
//                 'Class Name: ${classInfo.className}',
//                 style: TextStyle(fontWeight: FontWeight.bold),
//               ),
//               PopupMenuButton<String>(
//                 onSelected: (value) {
//                   if (value == 'edit') {
//                     _showEditClassDialog(context);
//                   } else if (value == 'view') {
//                     onView(); // Call the "View" callback
//                   } else if (value == 'export') {
//                     // Implement the export action
//                   } else if (value == 'delete') {
//                     onDelete();
//                   } else if (value == 'scanQR') {
//                     onScanQR();
//                   }
//                 },
//                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
//                   const PopupMenuItem<String>(
//                     value: 'edit',
//                     child: Text('Edit'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'view',
//                     child: Text('View'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'export',
//                     child: Text('Export'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'delete',
//                     child: Text('Delete'),
//                   ),
//                   const PopupMenuItem<String>(
//                     value: 'scanQR',
//                     child: Text('Scan QR Code'),
//                   ),
//                 ],
//               ),
//             ],
//           ),
//           // Text(
//           //   'Scanned Data: ${classInfo.scannedData}',
//           //   style: TextStyle(fontWeight: FontWeight.bold),
//           // ),
//         ],
//       ),
//     );
//   }
//
//   void _showEditClassDialog(BuildContext context) {
//     showDialog(
//       context: context,
//       builder: (BuildContext context) {
//         return EditClassDialog(
//           initialClassName: classInfo.className,
//           onSubmit: (newClassName) {
//             onEdit(newClassName);
//             Navigator.of(context).pop();
//           },
//         );
//       },
//     );
//   }
// }
//
// class EditClassDialog extends StatefulWidget {
//   final String initialClassName;
//   final Function(String) onSubmit;
//
//   EditClassDialog({
//     required this.initialClassName,
//     required this.onSubmit,
//   });
//
//   @override
//   _EditClassDialogState createState() => _EditClassDialogState();
// }
//
// class _EditClassDialogState extends State<EditClassDialog> {
//   TextEditingController classNameController = TextEditingController();
//
//   @override
//   void initState() {
//     super.initState();
//     classNameController.text = widget.initialClassName;
//   }
//
//   @override
//   Widget build(BuildContext context) {
//     return AlertDialog(
//       title: Text('Edit Class'),
//       content: Column(
//         mainAxisSize: MainAxisSize.min,
//         children: <Widget>[
//           TextField(
//             controller: classNameController,
//             decoration: InputDecoration(labelText: 'Class Name'),
//           ),
//         ],
//       ),
//       actions: <Widget>[
//         TextButton(
//           onPressed: () {
//             Navigator.of(context).pop();
//           },
//           child: Text('Cancel'),
//         ),
//         TextButton(
//           onPressed: () {
//             final className = classNameController.text;
//             widget.onSubmit(className);
//             Navigator.of(context).pop();
//           },
//           child: Text('Submit'),
//         ),
//       ],
//     );
//   }
// }
//
// class AddClassForm extends StatefulWidget {
//   final Function(String) onSubmit;
//
//   AddClassForm({required this.onSubmit});
//
//   @override
//   _AddClassFormState createState() => _AddClassFormState();
// }
//
// class _AddClassFormState extends State<AddClassForm> {
//   TextEditingController classNameController = TextEditingController();
//
//   @override
//   Widget build(BuildContext context) {
//     return AlertDialog(
//       title: Text('Add Class'),
//       content: Column(
//         mainAxisSize: MainAxisSize.min,
//         children: <Widget>[
//           TextField(
//             controller: classNameController,
//             decoration: InputDecoration(labelText: 'Class Name'),
//           ),
//         ],
//       ),
//       actions: <Widget>[
//         TextButton(
//           onPressed: () {
//             Navigator.of(context).pop();
//           },
//           child: Text('Cancel'),
//         ),
//         TextButton(
//           onPressed: () {
//             final className = classNameController.text;
//             widget.onSubmit(className);
//             Navigator.of(context).pop();
//           },
//           child: Text('Submit'),
//         ),
//       ],
//     );
//   }
// }






QRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR QR


// import 'package:flutter/material.dart';
// import 'package:qr_code_scanner/qr_code_scanner.dart';
// import 'database_helper.dart'; // Import your database helper class
// import 'package:intl/intl.dart';
//
// class ScannedData {
//   final String className;
//   final String registerNumber;
//   final DateTime currentDate;
//
//   ScannedData({
//     required this.className,
//     required this.registerNumber,
//     required this.currentDate,
//   });
// }
//
// class QRScannerPage extends StatefulWidget {
//   final String className; // Pass the class name as a parameter
//
//   QRScannerPage({required this.className});
//
//   @override
//   State<StatefulWidget> createState() => _QRScannerPageState();
// }
//
// class _QRScannerPageState extends State<QRScannerPage> {
//   final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');
//   late QRViewController controller;
//   String scannedData = '';
//
//   final dbHelper = DatabaseHelper();
//
//   @override
//   Widget build(BuildContext context) {
//     return Scaffold(
//       appBar: AppBar(
//         title: Text('QR Code Scanner'),
//       ),
//       body: Column(
//         children: <Widget>[
//           Expanded(
//             flex: 5,
//             child: QRView(
//               key: qrKey,
//               onQRViewCreated: _onQRViewCreated,
//             ),
//           ),
//           Expanded(
//             flex: 1,
//             child: Center(
//               child: Text(
//                 'Scanned Data: $scannedData',
//                 style: TextStyle(fontSize: 16),
//               ),
//             ),
//           ),
//           ElevatedButton(
//             onPressed: _onAcceptPressed,
//             child: Text('Accept'), // Add an "Accept" button
//           ),
//         ],
//       ),
//     );
//   }
//
//   @override
//   void dispose() {
//     controller.dispose();
//     super.dispose();
//   }
//
//   void _onQRViewCreated(QRViewController controller) {
//     this.controller = controller;
//     controller.scannedDataStream.listen((scanData) {
//       setState(() {
//         scannedData = scanData.code ?? '';
//       });
//     });
//   }
//
//   void _onAcceptPressed() async {
//     if (scannedData.isNotEmpty) {
//       final scannedDataModel = ScannedData(
//         className: widget.className,
//         registerNumber: scannedData,
//         currentDate: DateTime.now(),
//       );
//
//       final id = await dbHelper.insertScannedData(
//         scannedDataModel.className,
//         scannedDataModel.registerNumber,
//         scannedDataModel.currentDate,
//       );
//
//       setState(() {
//         scannedData = '';
//       });
//
//       final snackBar = SnackBar(
//         content: Text('${scannedDataModel.registerNumber} is Present'),
//       );
//       ScaffoldMessenger.of(context).showSnackBar(snackBar);
//     }
//   }
//
//   // void _onAcceptPressed() async {
//   //   if (scannedData.isNotEmpty) {
//   //     final scannedDataModel = ScannedData(
//   //       className: widget.className,
//   //       registerNumber: scannedData,
//   //       currentDate: DateTime.now(),
//   //     );
//   //
//   //     final row = {
//   //       'className': scannedDataModel.className,
//   //       'registerNumber': scannedDataModel.registerNumber,
//   //       'currentDate': DateFormat('yyyy-MM-dd HH:mm:ss')
//   //           .format(scannedDataModel.currentDate),
//   //     };
//   //
//   //     final id = await dbHelper.insertScannedData(row);
//   //
//   //     setState(() {
//   //       scannedData = '';
//   //     });
//   //
//   //     final snackBar = SnackBar(
//   //       content: Text('${scannedDataModel.registerNumber} is Present'),
//   //     );
//   //     ScaffoldMessenger.of(context).showSnackBar(snackBar);
//   //   }
//   // }
// }
//
// // import 'package:flutter/material.dart';
// // import 'package:qr_code_scanner/qr_code_scanner.dart';
// // import 'database_helper.dart'; // Import your database helper class
// // import 'package:intl/intl.dart';
// //
// // class ScannedData {
// //   final String className;
// //   final String registerNumber;
// //   final String name;
// //   final DateTime currentDate;
// //
// //   ScannedData({
// //     required this.className,
// //     required this.registerNumber,
// //     required this.name,
// //     required this.currentDate,
// //   });
// // }
// //
// // class QRScannerPage extends StatefulWidget {
// //   final String className; // Pass the class name as a parameter
// //
// //   QRScannerPage({required this.className});
// //
// //   @override
// //   State<StatefulWidget> createState() => _QRScannerPageState();
// // }
// //
// // class _QRScannerPageState extends State<QRScannerPage> {
// //   final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');
// //   late QRViewController controller;
// //   String scannedData = '';
// //
// //   final dbHelper = DatabaseHelper();
// //
// //   @override
// //   Widget build(BuildContext context) {
// //     return Scaffold(
// //       appBar: AppBar(
// //         title: Text('QR Code Scanner'),
// //       ),
// //       body: Column(
// //         children: <Widget>[
// //           Expanded(
// //             flex: 5,
// //             child: QRView(
// //               key: qrKey,
// //               onQRViewCreated: _onQRViewCreated,
// //             ),
// //           ),
// //           Expanded(
// //             flex: 1,
// //             child: Center(
// //               child: Text(
// //                 'Scanned Data: $scannedData',
// //                 style: TextStyle(fontSize: 16),
// //               ),
// //             ),
// //           ),
// //           ElevatedButton(
// //             onPressed: _onAcceptPressed,
// //             child: Text('Accept'), // Add an "Accept" button
// //           ),
// //         ],
// //       ),
// //     );
// //   }
// //
// //   @override
// //   void dispose() {
// //     controller.dispose();
// //     super.dispose();
//
// //   }
// //
// //   void _onQRViewCreated(QRViewController controller) {
// //     this.controller = controller;
// //     controller.scannedDataStream.listen((scanData) {
// //       setState(() {
// //         scannedData = scanData.code ?? '';
// //       });
// //     });
// //   }
// //
// //   void _onAcceptPressed() async {
// //     if (scannedData.isNotEmpty) {
// //       final scannedDataModel = ScannedData(
// //         className: widget.className,
// //         registerNumber: scannedData,
// //         name: scannedData,
// //         currentDate: DateTime.now(),
// //       );
// //       print(widget.className);
// //       print(scannedData);
// //       print(scannedData);
// //       print(DateTime.now());
// //
// //       final row = {
// //         'className': scannedDataModel.className,
// //         'registerNumber': scannedDataModel.registerNumber,
// //         'name': scannedDataModel.name,
// //         'currentDate': DateFormat('yyyy-MM-dd HH:mm:ss')
// //             .format(scannedDataModel.currentDate),
// //       };
// //
// //       final id = await dbHelper.insertScannedData(row);
// //
// //       setState(() {
// //         scannedData = '';
// //       });
// //
// //       final snackBar = SnackBar(
// //         content: Text('${scannedDataModel.name} is Present'),
// //       );
// //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
// //     }
// //   }
// // }
// //
// // // import 'package:flutter/material.dart';
// //
// // // import 'package:qr_code_scanner/qr_code_scanner.dart';
// // //
// // // class QRScannerPage extends StatefulWidget {
// // //   @override
// // //   State<StatefulWidget> createState() => _QRScannerPageState();
// // // }
// // //
// // // class _QRScannerPageState extends State<QRScannerPage> {
// // //   final GlobalKey qrKey = GlobalKey(debugLabel: 'QR');
// // //   late QRViewController controller;
// // //   String scannedData = '';
// // //
// // //   @override
// // //   Widget build(BuildContext context) {
// // //     return Scaffold(
// // //       appBar: AppBar(
// // //         title: Text('QR Code Scanner'),
// // //       ),
// // //       body: Column(
// // //         children: <Widget>[
// // //           Expanded(
// // //             flex: 5,
// // //             child: QRView(
// // //               key: qrKey,
// // //               onQRViewCreated: _onQRViewCreated,
// // //             ),
// // //           ),
// // //           Expanded(
// // //             flex: 1,
// // //             child: Center(
// // //               child: Text(
// // //                 'Scanned Data: $scannedData', // Display the scanned data here
// // //                 style: TextStyle(fontSize: 16),
// // //               ),
// // //             ),
// // //           ),
// // //         ],
// // //       ),
// // //     );
// // //   }
// // //
// // //   @override
// // //   void dispose() {
// // //     controller.dispose();
// // //     super.dispose();
// // //   }
// // //
// // //   void _onQRViewCreated(QRViewController controller) {
// // //     this.controller = controller;
// // //     controller.scannedDataStream.listen((scanData) {
// // //       setState(() {
// // //         scannedData = scanData.code ?? ''; // Use the null-aware operator and provide a default value
// // //       });
// // //     });
// // //   }
// // // }



attendancetrackerapgee


 // Export data to a CSV file
  // Future<void> _exportData(String className, DateTime? selectedDate) async {
  //   final dbHelper = DatabaseHelper();
  //   final attendanceData =
  //       await dbHelper.getAttendanceForExport(className, selectedDate);
  //
  //   if (attendanceData.isNotEmpty) {
  //     final csvData = const ListToCsvConverter().convert(
  //       attendanceData
  //           .map((entry) => [
  //                 entry.registerNumber,
  //                 DateFormat('yyyy-MM-dd').format(entry.currentDate)
  //               ])
  //           .toList(),
  //     );
  //
  //     final fileName = selectedDate != null
  //         ? 'Export-${className}-${DateFormat('dd-MM-yy').format(selectedDate)}.csv'
  //         : 'ExportAll-${className}-${DateFormat('dd-MM-yy-HH-mm').format(DateTime.now())}.csv';
  //
  //     final directory = await getExternalStorageDirectory();
  //     final file = File('${directory!.path}/$fileName');
  //     await file.writeAsString(csvData);
  //
  //     // Show a snackbar to indicate successful export
  //     final snackBar = SnackBar(
  //       content: Text('Exported data to $fileName'),
  //     );
  //     ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //   } else {
  //     // Show a snackbar to indicate no data to export
  //     final snackBar = SnackBar(
  //       content: Text('No data to export for $className'),
  //     );
  //     ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //   }
  // }
















  // import 'dart:io';
  // import 'package:csv/csv.dart';
  // import 'package:flutter/material.dart';
  // import 'package:intl/intl.dart';
  // import 'package:path_provider/path_provider.dart';
  // import 'package:myclass/database_helper.dart';
  // import 'package:shared_preferences/shared_preferences.dart';
  // import 'dart:convert';
  // import 'qr_scanner_page.dart';
  // import 'attendance_list_page.dart';
  //
  // class AttendanceTrackerPage extends StatefulWidget {
  //   const AttendanceTrackerPage({Key? key}) : super(key: key);
  //
  //   @override
  //   _AttendanceTrackerPageState createState() => _AttendanceTrackerPageState();
  // }
  //
  // class _AttendanceTrackerPageState extends State<AttendanceTrackerPage> {
  //   List<ClassInfo> classes = [];
  //   late String selectedClassName;
  //
  //   // Define a key for storing class data in SharedPreferences
  //   static const String classDataKey = 'classData';
  //
  //   // Load class data from SharedPreferences when the widget is initialized
  //   @override
  //   void initState() {
  //     super.initState();
  //     _loadClassData();
  //   }
  //
  //   Future<void> _exportAllData(String className) async {
  //     final dbHelper = DatabaseHelper();
  //     final attendanceData =
  //         await dbHelper.getAttendanceForExport(className, null);
  //
  //     if (attendanceData.isNotEmpty) {
  //       final csvData = const ListToCsvConverter().convert(
  //         attendanceData
  //             .map((entry) => [
  //                   entry.registerNumber,
  //                   DateFormat('yyyy-MM-dd').format(entry.currentDate)
  //                 ])
  //             .toList(),
  //       );
  //
  //       final fileName =
  //           'TMC-ExportAll-${className}-${DateFormat('dd-MM-yy-HH-mm').format(DateTime.now())}.csv';
  //
  //       final directory = await getExternalStorageDirectory();
  //       final customDirectoryPath = '${directory!.path}/Download/TrackMyClass';
  //
  //       final customDirectory = Directory(customDirectoryPath);
  //       if (!await customDirectory.exists()) {
  //         customDirectory.create(recursive: true);
  //       }
  //
  //       final file = File('$customDirectoryPath/$fileName');
  //       await file.writeAsString(csvData);
  //
  //       // Show a snackbar to indicate successful export
  //       final snackBar = SnackBar(
  //         content: Text('Exported data to $customDirectoryPath/$fileName'),
  //       );
  //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //     } else {
  //       // Show a snackbar to indicate no data to export
  //       final snackBar = SnackBar(
  //         content: Text('No data to export for $className'),
  //       );
  //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //     }
  //   }
  //
  //   Future<void> _selectAndExportSpecificDate(String className) async {
  //     final DateTime? selectedDate = await showDatePicker(
  //       context: context,
  //       initialDate: DateTime.now(),
  //       firstDate: DateTime(2020),
  //       lastDate: DateTime(2030),
  //     );
  //
  //     if (selectedDate != null) {
  //       final dbHelper = DatabaseHelper();
  //       final attendanceData =
  //           await dbHelper.getAttendanceForExport(className, selectedDate);
  //
  //       if (attendanceData.isNotEmpty) {
  //         final csvData = const ListToCsvConverter().convert(
  //           attendanceData
  //               .map((entry) => [
  //                     entry.registerNumber,
  //                     DateFormat('yyyy-MM-dd').format(entry.currentDate)
  //                   ])
  //               .toList(),
  //         );
  //
  //         final fileName =
  //             'TMC-Export-${className}-${DateFormat('dd-MM-yy').format(selectedDate)}.csv';
  //
  //         final directory = await getExternalStorageDirectory();
  //         final customDirectoryPath = '${directory!.path}/Download/TrackMyClass';
  //
  //         final customDirectory = Directory(customDirectoryPath);
  //         if (!await customDirectory.exists()) {
  //           customDirectory.create(recursive: true);
  //         }
  //
  //         final file = File('$customDirectoryPath/$fileName');
  //         await file.writeAsString(csvData);
  //
  //         // Show a snackbar to indicate successful export
  //         final snackBar = SnackBar(
  //           content: Text('Exported data to $customDirectoryPath/$fileName'),
  //         );
  //         ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //       } else {
  //         // Show a snackbar to indicate no data to export
  //         final snackBar = SnackBar(
  //           content: Text('No data to export for $className on $selectedDate'),
  //         );
  //         ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //       }
  //     }
  //   }
  //
  //   // Save class data to SharedPreferences whenever it changes
  //   void _saveClassData() async {
  //     final prefs = await SharedPreferences.getInstance();
  //     final classData = classes.map((classInfo) {
  //       return {
  //         'className': classInfo.className,
  //         'scannedData': classInfo.scannedData,
  //       };
  //     }).toList();
  //     await prefs.setStringList(
  //         classDataKey, classData.map((data) => jsonEncode(data)).toList());
  //   }
  //
  //   // Load class data from SharedPreferences
  //   void _loadClassData() async {
  //     final prefs = await SharedPreferences.getInstance();
  //     final classData = prefs.getStringList(classDataKey);
  //     if (classData != null) {
  //       setState(() {
  //         classes = classData.map((data) {
  //           final decodedData = jsonDecode(data);
  //           return ClassInfo(
  //             decodedData['className'],
  //             decodedData['scannedData'] ?? '',
  //           );
  //         }).toList();
  //       });
  //     }
  //   }
  //
  //   void _showAddClassDialog(BuildContext context) {
  //     showDialog(
  //       context: context,
  //       builder: (BuildContext context) {
  //         return AddClassForm(
  //           onSubmit: (className) {
  //             setState(() {
  //               classes.add(ClassInfo(className, ''));
  //               _saveClassData();
  //             });
  //           },
  //         );
  //       },
  //     );
  //   }
  //
  //   void _deleteClass(int index) async {
  //     final classNameToDelete = classes[index].className;
  //
  //     // Delete the class from the database
  //     final dbHelper = DatabaseHelper();
  //     await dbHelper.deleteClass(classNameToDelete);
  //
  //     setState(() {
  //       classes.removeAt(index);
  //       _saveClassData();
  //     });
  //   }
  //
  //   void _openQRScanner(BuildContext context, int index) async {
  //     final scannedData = await Navigator.push(
  //       context,
  //       MaterialPageRoute(
  //         builder: (context) =>
  //             QRScannerPage(className: classes[index].className),
  //       ),
  //     );
  //
  //     if (scannedData != null) {
  //       _updateScannedData(index, scannedData);
  //     }
  //   }
  //
  //   void _updateScannedData(int index, String scannedData) {
  //     setState(() {
  //       classes[index].scannedData = scannedData;
  //       _saveClassData();
  //     });
  //   }
  //
  //   void _showViewAttendancePage(BuildContext context, String className) async {
  //     final DateTime? selectedDate = await showDatePicker(
  //       context: context,
  //       initialDate: DateTime.now(),
  //       firstDate: DateTime(2020),
  //       lastDate: DateTime(2030),
  //     );
  //
  //     if (selectedDate != null) {
  //       // Redirect to the AttendanceListPage with the selected date and class name
  //       Navigator.push(
  //         context,
  //         MaterialPageRoute(
  //           builder: (context) => AttendanceListPage(
  //             selectedDate: selectedDate,
  //             className: className,
  //           ),
  //         ),
  //       );
  //     }
  //   }
  //
  //   @override
  //   Widget build(BuildContext context) {
  //     return Scaffold(
  //       appBar: AppBar(
  //         title: Text('Attendance Tracker'),
  //         backgroundColor: Color.fromARGB(255, 150, 235, 153),
  //       ),
  //       body: Column(
  //         children: <Widget>[
  //           Expanded(
  //             child: ListView.builder(
  //               itemCount: classes.length,
  //               itemBuilder: (context, index) {
  //                 return ClassBox(
  //                   classInfo: classes[index],
  //                   onDelete: () {
  //                     _deleteClass(index);
  //                   },
  //                   onEdit: (newClassName) {
  //                     _editClass(index, newClassName);
  //                   },
  //                   onScanQR: () {
  //                     _openQRScanner(context, index);
  //                   },
  //                   onView: () {
  //                     _showViewAttendancePage(context, classes[index].className);
  //                   },
  //                   onExport: () {
  //                     _exportAllData(classes[index].className); // Export all data
  //                   },
  //                 );
  //               },
  //             ),
  //           ),
  //         ],
  //       ),
  //       floatingActionButton: FloatingActionButton(
  //         onPressed: () {
  //           _showAddClassDialog(context);
  //         },
  //         tooltip: 'Add',
  //         child: Icon(
  //           Icons.add,
  //           color: Color.fromARGB(255, 150, 235, 153),
  //         ),
  //         backgroundColor: Colors.white,
  //       ),
  //     );
  //   }
  //
  //   void restartApp(BuildContext context) {
  //     runApp(
  //       MaterialApp(
  //         home: AttendanceTrackerPage(),
  //       ),
  //     );
  //   }
  //
  //   void _editClass(int index, String className) {
  //     print('Editing class: $className');
  //
  //     setState(() {
  //       classes[index].className = className;
  //       _saveClassData();
  //     });
  //     restartApp(context);
  //   }
  // }
  //
  // class ClassInfo {
  //   String className;
  //   String scannedData;
  //
  //   ClassInfo(this.className, this.scannedData);
  // }
  //
  // class ClassBox extends StatelessWidget {
  //   final ClassInfo classInfo;
  //   final VoidCallback onDelete;
  //   final Function(String) onEdit;
  //   final VoidCallback onScanQR;
  //   final VoidCallback onView; // Added callback for "View" action
  //   final VoidCallback onExport; // Added callback for "Export" action
  //
  //   ClassBox({
  //     required this.classInfo,
  //     required this.onDelete,
  //     required this.onEdit,
  //     required this.onScanQR,
  //     required this.onView,
  //     required this.onExport,
  //   });
  //
  //   @override
  //   Widget build(BuildContext context) {
  //     return Container(
  //       padding: EdgeInsets.all(16),
  //       margin: EdgeInsets.all(16),
  //       decoration: BoxDecoration(
  //         border: Border.all(color: Color.fromARGB(255, 150, 235, 153)),
  //         borderRadius: BorderRadius.circular(8),
  //       ),
  //       child: Column(
  //         children: [
  //           Row(
  //             mainAxisAlignment: MainAxisAlignment.spaceBetween,
  //             children: [
  //               Text(
  //                 'Class Name: ${classInfo.className}',
  //                 style: TextStyle(fontWeight: FontWeight.bold),
  //               ),
  //               PopupMenuButton<String>(
  //                 onSelected: (value) {
  //                   if (value == 'edit') {
  //                     _showEditClassDialog(context);
  //                   } else if (value == 'view') {
  //                     onView(); // Call the "View" callback
  //                   } else if (value == 'export') {
  //                     onExport(); // Call the "Export" callback
  //                   } else if (value == 'delete') {
  //                     onDelete();
  //                   } else if (value == 'scanQR') {
  //                     onScanQR();
  //                   }
  //                 },
  //                 itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
  //                   const PopupMenuItem<String>(
  //                     value: 'edit',
  //                     child: Text('Edit'),
  //                   ),
  //                   const PopupMenuItem<String>(
  //                     value: 'view',
  //                     child: Text('View'),
  //                   ),
  //                   const PopupMenuItem<String>(
  //                     value: 'export',
  //                     child: Text('Export'),
  //                   ),
  //                   const PopupMenuItem<String>(
  //                     value: 'delete',
  //                     child: Text('Delete'),
  //                   ),
  //                   const PopupMenuItem<String>(
  //                     value: 'scanQR',
  //                     child: Text('Scan QR Code'),
  //                   ),
  //                 ],
  //               ),
  //             ],
  //           ),
  //         ],
  //       ),
  //     );
  //   }
  //
  //   void _showEditClassDialog(BuildContext context) {
  //     showDialog(
  //       context: context,
  //       builder: (BuildContext context) {
  //         return EditClassDialog(
  //           initialClassName: classInfo.className,
  //           onSubmit: (newClassName) {
  //             onEdit(newClassName);
  //             Navigator.of(context).pop();
  //           },
  //         );
  //       },
  //     );
  //   }
  // }
  //
  // class EditClassDialog extends StatefulWidget {
  //   final String initialClassName;
  //   final Function(String) onSubmit;
  //
  //   EditClassDialog({
  //     required this.initialClassName,
  //     required this.onSubmit,
  //   });
  //
  //   @override
  //   _EditClassDialogState createState() => _EditClassDialogState();
  // }
  //
  // class _EditClassDialogState extends State<EditClassDialog> {
  //   TextEditingController classNameController = TextEditingController();
  //
  //   @override
  //   void initState() {
  //     super.initState();
  //     classNameController.text = widget.initialClassName;
  //   }
  //
  //   @override
  //   Widget build(BuildContext context) {
  //     return AlertDialog(
  //       title: Text('Edit Class'),
  //       content: Column(
  //         mainAxisSize: MainAxisSize.min,
  //         children: <Widget>[
  //           TextField(
  //             controller: classNameController,
  //             decoration: InputDecoration(labelText: 'Class Name'),
  //           ),
  //         ],
  //       ),
  //       actions: <Widget>[
  //         TextButton(
  //           onPressed: () {
  //             Navigator.of(context).pop();
  //           },
  //           child: Text('Cancel'),
  //         ),
  //         TextButton(
  //           onPressed: () {
  //             final className = classNameController.text;
  //             widget.onSubmit(className);
  //             Navigator.of(context).pop();
  //           },
  //           child: Text('Submit'),
  //         ),
  //       ],
  //     );
  //   }
  // }
  //
  // class AddClassForm extends StatefulWidget {
  //   final Function(String) onSubmit;
  //
  //   AddClassForm({required this.onSubmit});
  //
  //   @override
  //   _AddClassFormState createState() => _AddClassFormState();
  // }
  //
  // class _AddClassFormState extends State<AddClassForm> {
  //   TextEditingController classNameController = TextEditingController();
  //
  //   @override
  //   Widget build(BuildContext context) {
  //     return AlertDialog(
  //       title: Text('Add Class'),
  //       content: Column(
  //         mainAxisSize: MainAxisSize.min,
  //         children: <Widget>[
  //           TextField(
  //             controller: classNameController,
  //             decoration: InputDecoration(labelText: 'Class Name'),
  //           ),
  //         ],
  //       ),
  //       actions: <Widget>[
  //         TextButton(
  //           onPressed: () {
  //             Navigator.of(context).pop();
  //           },
  //           child: Text('Cancel'),
  //         ),
  //         TextButton(
  //           onPressed: () {
  //             final className = classNameController.text;
  //             widget.onSubmit(className);
  //             Navigator.of(context).pop();
  //           },
  //           child: Text('Submit'),
  //         ),
  //       ],
  //     );
  //   }
  // }











  test




  // Future<void> _exportData(String className) async {
  //   final dbHelper = DatabaseHelper();
  //
  //   // Show a dialog to select the export type (all or specific date)
  //   showDialog(
  //     context: context,
  //     builder: (BuildContext context) {
  //       return AlertDialog(
  //         title: Text('Select Export Type'),
  //         content: Column(
  //           mainAxisSize: MainAxisSize.min,
  //           children: <Widget>[
  //             ElevatedButton(
  //               onPressed: () async {
  //                 // Export all data
  //                 Navigator.of(context).pop();
  //                 await _exportAllData(className);
  //               },
  //               child: Text('Export All'),
  //             ),
  //             ElevatedButton(
  //               onPressed: () async {
  //                 // Show a date picker to select a specific date
  //                 Navigator.of(context).pop();
  //                 await _selectAndExportSpecificDate(className);
  //               },
  //               child: Text('Export Specific Date'),
  //             ),
  //           ],
  //         ),
  //       );
  //     },
  //   );
  // }
  //
  // Future<void> _exportAllData(String className) async {
  //   final dbHelper = DatabaseHelper();
  //   final attendanceData =
  //       await dbHelper.getAttendanceForExport(className, null);
  //
  //   if (attendanceData.isNotEmpty) {
  //     final csvData = const ListToCsvConverter().convert(
  //       attendanceData
  //           .map((entry) => [
  //                 entry.registerNumber,
  //                 DateFormat('yyyy-MM-dd').format(entry.currentDate)
  //               ])
  //           .toList(),
  //     );
  //
  //     final fileName =
  //         'TMC-ExportAll-${className}-${DateFormat('dd-MM-yy-HH-mm').format(DateTime.now())}.csv';
  //
  //     final directory = await _selectExportDirectory();
  //
  //     if (directory != null) {
  //       final file = File('${directory.path}/$fileName');
  //       await file.writeAsString(csvData);
  //
  //       // Show a snackbar to indicate successful export
  //       final snackBar = SnackBar(
  //         content: Text('Exported data to $fileName'),
  //       );
  //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //     } else {
  //       // Handle directory selection cancellation
  //       final snackBar = SnackBar(
  //         content: Text('Export cancelled'),
  //       );
  //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //     }
  //   } else {
  //     // Show a snackbar to indicate no data to export
  //     final snackBar = SnackBar(
  //       content: Text('No data to export for $className'),
  //     );
  //     ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //   }
  // }
  //
  // Future<void> _selectAndExportSpecificDate(String className) async {
  //   final DateTime? selectedDate = await showDatePicker(
  //     context: context,
  //     initialDate: DateTime.now(),
  //     firstDate: DateTime(2020),
  //     lastDate: DateTime(2030),
  //   );
  //
  //   if (selectedDate != null) {
  //     final dbHelper = DatabaseHelper();
  //     final attendanceData =
  //         await dbHelper.getAttendanceForExport(className, selectedDate);
  //
  //     if (attendanceData.isNotEmpty) {
  //       final csvData = const ListToCsvConverter().convert(
  //         attendanceData
  //             .map((entry) => [
  //                   entry.registerNumber,
  //                   DateFormat('yyyy-MM-dd').format(entry.currentDate)
  //                 ])
  //             .toList(),
  //       );
  //
  //       final fileName =
  //           'TMC-Export-${className}-${DateFormat('dd-MM-yy').format(selectedDate)}.csv';
  //
  //       final directory = await _selectExportDirectory();
  //
  //       if (directory != null) {
  //         final file = File('${directory.path}/$fileName');
  //         await file.writeAsString(csvData);
  //
  //         // Show a snackbar to indicate successful export
  //         final snackBar = SnackBar(
  //           content: Text('Exported data to $fileName'),
  //         );
  //         ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //       } else {
  //         // Handle directory selection cancellation
  //         final snackBar = SnackBar(
  //           content: Text('Export cancelled'),
  //         );
  //         ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //       }
  //     } else {
  //       // Show a snackbar to indicate no data to export
  //       final snackBar = SnackBar(
  //         content: Text('No data to export for $className on $selectedDate'),
  //       );
  //       ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //     }
  //   }
  // }
  //
  // Future<Directory?> _selectExportDirectory() async {
  //   if (await Permission.storage.request().isGranted) {
  //     final result = await FilePicker.platform.getDirectoryPath();
  //     if (result != null) {
  //       return Directory(result);
  //     }
  //   } else {
  //     // Handle permission not granted
  //     final snackBar = SnackBar(
  //       content: Text('Storage permission not granted. Cannot export data.'),
  //     );
  //     ScaffoldMessenger.of(context).showSnackBar(snackBar);
  //   }
  //   return null;
  // }